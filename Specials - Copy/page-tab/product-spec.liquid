<div class="inner-radius">
  <div class="grid">
    <div class="grid__item one-half text-center">
      <div class="product-single__photos" id="ProductPhoto">
        {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
        <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="ProductPhotoImg">
      </div>

      {% comment %}
      Create thumbnails if we have more than one product image
      {% endcomment %}
      {% if product.images.size > 1 %}
      <ul class="product-single__thumbnails grid-uniform" id="ProductThumbs">

        {% for image in product.images %}
        <li class="grid__item one-quarter">
          <a href="{{ image.src | img_url: 'large' }}" class="product-single__thumbnail">
            <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
          </a>
        </li>
        {% endfor %}

      </ul>
      {% endif %}
    </div>
    <div class="grid__item one-half">
      <h2 class="product-item-title" itemprop="name">{{ product.title }}</h2>

      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
        ID addToCartForm is a selector for the ajax cart plugin
        {% endcomment %}
        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

          {% comment %}
          Add product variants as a dropdown.
          - By default, each variant (or combination of variants) will display as its own <option>
          - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

          You can leverage jQuery to add a callback on page load and each time the select element changes:
          - Include option_selection.js (as seen at the bottom of this file)
          - This allows you to use JavaScript anytime the variant dropdown changes
          - This also separates out your variant options (ie. size, color, etc.) to separate select elements

          For more information on products with multiple options, visit:
          - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
          {% endcomment %}
          <select name="id" id="productSelect" class="product-single__variants" style="display: none;">
            {% for variant in product.variants %}
            {% if variant.available %}

            {% comment %}
            Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
            {% endcomment %}
            <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

            {% else %}
            <option disabled="disabled">
              {{ variant.title }} - {{ 'products.product.sold_out' | t }}
            </option>
            {% endif %}
            {% endfor %}
            </select>

            <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
            <span id="ProductPrice" class="h2" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
              {{ current_variant.price | money }}
            </span>

            {% if product.compare_at_price_max > product.price %}
            <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
            <p id="ComparePrice">
              {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
            </p>
            {% endif %}

            <div class="product-description rte" itemprop="description">
              {{ product.description }}
            </div>

            <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
            <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">

            <button type="submit" name="add" id="AddToCart" class="btn button color-primary-background text-uppercase strong">
              <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
            </button>
            </form>
          <a href="#" class="contact-us-product-button color-primary text-uppercase">Contact us</a>
          </div>
      </div>
    </div>

    <div id="product-specs">
      
      {% assign page_handle = product.title | append: ' - (Specs)' | handleize %}
      {{ pages[page_handle].content }}
      
    </div>     
        
  </div>