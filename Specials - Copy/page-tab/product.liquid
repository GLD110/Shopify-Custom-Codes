<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

{% section 'hero-image-collection'%}

<div itemscope itemtype="http://schema.org/Product" class="wrapper">

    <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
    <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

    {% comment %}
        Get first variant, or deep linked one
    {% endcomment %}
    {% assign current_variant = product.selected_or_first_available_variant %}

    {% include 'breadcrumb' %}

    <div class="grid product-collection-title-container">
        <div class="grid__item large--three-quarters">
            <h1>{{ collection.title }}</h1>
        </div>
        <div class="grid__item large--one-quarter text-right">
            <a href="#" data-reveal-id="modalSearchPop" data-animation="fadeAndPop" class="search">
                <span class="icon-text" id="searchIcon">
                    <span class="icon icon-search" aria-hidden="true">
                    </span>
                </span>
            </a>
        </div>
    </div>

     <div class="grid">                  
         <div class="grid__item one-whole">
             <ul class="tabs">
                 <li><a href="#tab-1">Product Details</a></li>
                 <li><a href="#tab-2">Accessories</a></li>
                 <li><a href="#tab-3">Graphics Info</a></li>
                 <li><a href="#tab-4">Specs</a></li>
             </ul>
             <div id="tab-1" class="tab-block">                  
                 {% include 'product-detail' %}
             </div>
             <div id="tab-2" class="tab-block">
                 {% include 'product-accessories' %}
             </div>
             <div id="tab-3" class="tab-block">
                 {% include 'product-grahics' %}
             </div>
             <div id="tab-4" class="tab-block">
                 {% include 'product-spec' %}
             </div>
         </div>
     </div>

</div>

{% include 'related-products' %}


{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
